#!/usr/bin/env python
import os
import argparse
import subprocess


BRANCH_ROOT = os.environ['HOME']
BRANCH_LIST = os.path.join(BRANCH_ROOT, '/discos-sw/config/misc/branches')

with open(BRANCH_LIST, 'r') as f:
    declared_branches = [b.strip() for b in f.readlines()]

branches = []
for branch in declared_branches:
    if os.path.exists(os.path.join(BRANCH_ROOT, branch)):
        branches.append(branch)

if declared_branches != branches:
    lines = [b + '\n' for b in branches]
    open(BRANCH_LIST, 'w').writelines(lines)

def parse_branch(branch):
    return branch.rstrip('/')

parser = argparse.ArgumentParser()
parser.add_argument('branch', type=parse_branch, choices=branches)
parser.add_argument(
    '--cdb',
    choices=('telescope', 'test'),
    default='telescope')
args = parser.parse_args()

BRANCH_PATH = os.path.join(BRANCH_ROOT, args.branch)

# Set the DISCOS_BRANCH environment variable
lines = []
load_branch = '/discos-sw/config/misc/load_branch'
for line in open(load_branch):
    if 'export DISCOS_BRANCH=' in line:
        lines.append('export DISCOS_BRANCH=%s\n' % args.branch)
    elif 'export CDB=' in line:
        lines.append('export CDB=%s\n' % args.cdb)
    elif 'export INTROOT=' in line:
        lines.append('export INTROOT=/discos-sw/introots/%s\n' % args.branch)
    else:
        lines.append(line)
open(load_branch, 'w').writelines(lines)

os.symlink('/discos-sw/introots/%s' % args.branch, '/discos-sw/introots/tmp')
os.rename('/discos-sw/introots/tmp', '/discos-sw/introots/default')

FNULL = open(os.devnull, 'w')
subprocess.call(['ifrCacheInvalidate'], stdout=FNULL, stderr=FNULL)
