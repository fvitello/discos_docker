--- mico/idl/idlparser.cc	2008-07-25 09:41:46.000000000 -0400
+++ mico.new/idl/idlparser.cc	2019-12-14 11:44:34.221348947 -0300
@@ -395,7 +395,7 @@
   node = node->getBranch (1);
 
   assert (node);
-  assert (node->getType() == string_literals ||
+  assert (node->getType() == ParseNodeType::string_literals ||
 	  node->getType() == scoped_name);
 
   CORBA::String_var to_be_imported = CORBA::string_dup (node->getIdent ());
@@ -427,7 +427,7 @@
 
   CORBA::Contained_var icont = CORBA::Contained::_nil ();
 
-  if (node->getType() == string_literals) {
+  if (node->getType() == ParseNodeType::string_literals) {
     if (CORBA::is_nil (myrepo)) {
       cerr << IDLError (36, node, to_be_imported.in()) << endl;
       exit (1);
@@ -1823,7 +1823,7 @@
 IDLParser::collectContextExpr( ParseNode *node, CORBA::ContextIdSeq &ctx )
 {
   while( node != NULL ) {
-    assert( node->getType() == string_literals );
+    assert( node->getType() == ParseNodeType::string_literals );
     int i = ctx.length();
     ctx.length( i + 1 );
     ctx[ i ] = (const char *) node->getIdent();
diff -Naur mico/idl/yacc.cc mico.new/idl/yacc.cc
--- mico/idl/yacc.cc	2008-07-25 09:41:47.000000000 -0400
+++ mico.new/idl/yacc.cc	2019-12-14 11:44:51.675313611 -0300
@@ -3639,7 +3639,7 @@
   case 251:
 #line 1792 "yacc.yy"
     {
-	    yyval.node = new ParseNode( string_literals );
+	    yyval.node = new ParseNode( ParseNodeType::string_literals );
 	    yyval.node->setIdent( yyvsp[0]._str );
 	  }
     break;
@@ -3647,7 +3647,7 @@
   case 252:
 #line 1797 "yacc.yy"
     {
-	    yyval.node = new ParseNode( string_literals, yyvsp[0].node );
+	    yyval.node = new ParseNode( ParseNodeType::string_literals, yyvsp[0].node );
 	    yyval.node->setIdent( yyvsp[-2]._str );
 	  }
     break;
@@ -3774,7 +3774,7 @@
   case 267:
 #line 1919 "yacc.yy"
     {
-	    yyval.node = new ParseNode (string_literals);
+	    yyval.node = new ParseNode (ParseNodeType::string_literals);
 	    yyval.node->setIdent (yyvsp[0]._str);
 	  }
     break;
